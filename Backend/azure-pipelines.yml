trigger:
- main

pr:
- main

pool:
  vmImage: windows-latest

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'sonarcloud-srv-0'
    organization: 'p2the-pretzelmen'
    scannerMode: 'MSBuild'
    projectKey: 'P2the-pretzelmen_backend'
    projectName: 'P2the-pretzelmen_backend'
    extraProperties: |
      sonar.exclusions=**/obj/**,**/lib/**,**/*.dll



- script: dotnet build --configuration Release
  displayName: Analyze Build
  workingDirectory: Backend/
- task: DotNetCoreCLI@2
  displayName: Analyze Tests
  inputs:
    command: test
    projects: Backend/*Test/*.csproj
    arguments: --configuration Release --collect "Code Coverage"

- task: SonarCloudAnalyze@1
  displayName: run code analysis



- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Agent.TempDirectory)/*/coburtura/coverage.xml

- task: SonarCloudPublish@1
  displayName: Publish Code Analysis


- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    projects: Backend/BackendAPI/BackendAPI.csproj
    publishWebProjects: false
    zipAfterPublish: true
- task: AzureRmWebAppDeployment@4
  displayName: Azure Web App
  inputs:
    ConnectionType: AzureRM
    azureSubscription: azure-resource-group
    appType: webApp
    WebAppName: magic-match-api
    packageForLinux: $(System.DefaultWorkingDirectory)/**/*.zip
