trigger:
- main

pr:
- main

pool:
  vmImage: ubuntu-18.04

stages:
  - stage: analyze
    displayName: Analyze
    jobs:
      - job: analyze
        steps:
          - task: Npm@1
            displayName: Install Dependencies
            inputs:
              workingDir: fronEnd/frontEnd/
              command: install
          - task: SonarCloudPrepare@1
            inputs:
              SonarCloud: sonarcloud-srv-0
              scannerMode: CLI
              organization: p2the-pretzelmen
              cliProjectKey: P2the-pretzelmen_frontend
              cliProjectName: P2the-pretzelmen_frontend
              cliSources: fronEnd/frontEnd/src/
          - task: Npm@1
            displayName: Analyze Build
            inputs:
              workingDir: fronEnd/frontEnd/
              command: custom
              customCommand: run build -- --prod
          - task: Npm@1
            displayName: Analyze Tests
            inputs:
              workingDir: fronEnd/frontEnd/
              command: custom
              customCommand: run test-hl -- --code-coverage
          - task: PublishCodeCoverageResults@1
            displayName: Publish Code Coverage
            inputs:
              codeCoverageTool: Cobertura
              reportDirectory: fronEnd/frontEnd/coverage/
              summaryFileLocation: fronEnd/frontEnd/coverage/cobertura-coverage.xml
              failIfCoverageEmpty: true
          - task: SonarCloudAnalyze@1
            displayName: Run Code Analysis
          - task: SonarCloudPublish@1
            displayName: Publish Code Analysis
  - stage: deploy
    displayName: Deploy
    jobs:
      - job: publish
        steps:
          - task: Docker@2
            displayName: Login to Container Registry
            inputs:
              command: login
              containerRegistry: pretzelmen-acr
          - script: |
              docker image build --file fronEnd/frontEnd/Dockerfile --tag pretzelmen.azurecr.io/app:latest fronEnd/frontEnd/
              docker image push pretzelmen.azurecr.io/app:latest
            displayName: Build & Push Docker Image
          - task: Docker@2
            displayName: Logout of Container Registry
            inputs:
              command: logout
              containerRegistry: pretzelmen-acr
          - task: AzureWebAppContainer@1
            displayName: Web App Container
            inputs:
              azureSubscription: azure-resource-group
              resourceGroupName: pretzelmen-group
              appName: magic-match
              containers: pretzelmen.azurecr.io/app:latest
